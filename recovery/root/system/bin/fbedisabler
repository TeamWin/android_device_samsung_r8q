#!/sbin/sh
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#	  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

check_fbe() {
  local fbe_ver=$(grep -o -m1 "fileencryption=ice" "/tmp/vendor/etc/fstab.qcom")
  if [ "$fbe_ver" = "fileencryption=ice" ]; then
      echo " - File-based encryption detected"
      disable_fbe
  else
      echo " - File-based encryption not detected. Aborting..."
  fi
}

disable_fbe() {
      echo " - Disabling file-based encryption for /data..."
      sed -i 's/fileencryption=ice/encryptable/' "/tmp/vendor/etc/fstab.qcom"
      echo " - Formatting /data partition"
      twrp format data
      echo " - Done"
}

user_approval() {
echo " - Decrypting..."
echo " - Warning: This process will wipe your entire /data partition. Type yes to continue, or anything else to abort."

read accept

if [ -n "$accept" ] && [ "$accept" = "yes" ]; then
    mnt_vendor
    check_fbe
    umnt_vendor
else
    echo " - Aborting..."
    umnt_vendor
fi
}

mnt_vendor() {
    if mount | grep /vendor >/dev/null; then
        umount "/vendor"
    fi
    echo " - Mounting vendor..."
    mkdir -p "/tmp/vendor";
    blockdev --setrw "/dev/block/mapper/vendor";
    mount -w "/dev/block/mapper/vendor" "/tmp/vendor";
}

umnt_vendor() {
    if mount | grep /tmp/vendor >/dev/null; then
        echo " - Unmounting vendor..."
        umount "/tmp/vendor";
        rm -r "/tmp/vendor";
        blockdev --setro "/dev/block/mapper/vendor";
    fi
}

user_approval

exit 0;
